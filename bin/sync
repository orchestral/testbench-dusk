#!/usr/bin/env php
<?php

$workingPath = getcwd();

require __DIR__.'/../vendor/autoload.php';

$files = new Illuminate\Filesystem\Filesystem();

$files->deleteDirectory("{$workingPath}/skeleton");

$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/bootstrap/app.php", "{$workingPath}/laravel/bootstrap/app.php");
$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/server.php", "{$workingPath}/laravel/server.php");
$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/.gitignore", "{$workingPath}/laravel/.gitignore");
$files->copyDirectory("{$workingPath}/vendor/orchestra/testbench-core/workbench/app/View", "{$workingPath}/workbench/app/View");
$files->copyDirectory("{$workingPath}/vendor/orchestra/testbench-core/workbench/resources", "{$workingPath}/workbench/resources");
$files->copyDirectory("{$workingPath}/vendor/orchestra/testbench-core/workbench/routes", "{$workingPath}/workbench/routes");
$files->copy("{$workingPath}/vendor/laravel/dusk/stubs/phpunit.xml", "{$workingPath}/stubs/phpunit.xml");

Symfony\Component\Process\Process::fromShellCommandline(
    'composer create-project "laravel/laravel:8.x-dev" skeleton --no-scripts --no-plugins --quiet --no-install', $workingPath
)->mustRun();

Illuminate\Support\Collection::make([
    'config/*.php',
    'database/.gitignore',
    'database/migrations/2014_10_12_000000_create_users_table.php',
    'database/migrations/2014_10_12_100000_create_password_resets_table.php',
    'database/migrations/2019_08_19_000000_create_failed_jobs_table.php',
    'resources/lang/en/*.php',
    'resources/lang/*.json',
    'resources/views/*',
    'public/index.php',
    'server.php',
    'tests/CreatesApplication.php',
])->transform(fn ($file) => "{$workingPath}/skeleton/{$file}")
->map(fn ($file) => str_contains($file, '*') ? [...$files->glob($file)] : $file)
->flatten()
->each(function ($file) use ($files, $workingPath) {
    $files->copy($file, "{$workingPath}/laravel".Illuminate\Support\Str::after($file, "{$workingPath}/skeleton"));
});
$files->delete("{$workingPath}/laravel/config/sanctum.php");
$files->move("{$workingPath}/laravel/database/migrations/2014_10_12_000000_create_users_table.php", "{$workingPath}/laravel/migrations/2014_10_12_000000_testbench_create_users_table.php");
$files->move("{$workingPath}/laravel/database/migrations/2014_10_12_100000_create_password_resets_table.php", "{$workingPath}/laravel/migrations/2014_10_12_100000_testbench_create_password_resets_table.php");
$files->move("{$workingPath}/laravel/database/migrations/2019_08_19_000000_create_failed_jobs_table.php", "{$workingPath}/laravel/migrations/2019_08_19_000000_testbench_create_failed_jobs_table.php");

Illuminate\Support\Collection::make([
    'cache/0001_01_01_000000_testbench_create_cache_table' => 'Cache/Console/stubs/cache.stub',
    'notifications/0001_01_01_000000_testbench_create_notifications_table' => 'Notifications/Console/stubs/notifications.stub',
    'queue/0001_01_01_000000_testbench_create_jobs_table' => 'Queue/Console/stubs/jobs.stub',
    'queue/0001_01_01_000000_testbench_create_job_batches_table' => 'Queue/Console/stubs/batches.stub',
    // 'queue/0001_01_01_000000_testbench_create_failed_jobs_table' => 'Queue/Console/stubs/failed_jobs.stub',
    'session/0001_01_01_000000_testbench_create_sessions_table' => 'Session/Console/stubs/database.stub',
])->transform(fn ($file) => "{$workingPath}/vendor/laravel/framework/src/Illuminate/{$file}")
->each(function ($from, $to) use ($files, $workingPath) {
    $files->copy($from, "{$workingPath}/laravel/migrations/{$to}.php");
})->keys()
->push(...[
    '2014_10_12_000000_testbench_create_users_table',
    '2014_10_12_100000_testbench_create_password_resets_table',
    '2019_08_19_000000_testbench_create_failed_jobs_table',
])->each(function ($migration) use ($files, $workingPath) {
    $files->replaceInFile('class Create', 'class TestbenchCreate', "{$workingPath}/laravel/migrations/{$migration}.php");
})->filter(fn ($migration) => str_starts_with($migration, 'queue'))
->mapWithKeys(fn ($migration) => match ($migration) {
    'queue/0001_01_01_000000_testbench_create_jobs_table' => [$migration => 'jobs'],
    'queue/0001_01_01_000000_testbench_create_job_batches_table' => [$migration => 'job_batches'],
    // 'queue/0001_01_01_000000_testbench_create_failed_jobs_table' => [$migration => 'failed_jobs'],
})->each(function ($table, $migration) use ($files, $workingPath) {
    $files->replaceInFile(['{{tableClassName}}', '{{table}}'], [Illuminate\Support\Str::studly($table), $table], "{$workingPath}/laravel/migrations/{$migration}.php");
});

transform([
    "env('APP_ENV', 'production')" => "env('APP_ENV', 'testing')",
    PHP_EOL.'        App\Providers' => PHP_EOL.'        // App\Providers',
    PHP_EOL.'         * Package Service Providers...' => PHP_EOL.'         * Dusk Service Provider'.PHP_EOL.'         */'.PHP_EOL.'        Laravel\Dusk\DuskServiceProvider::class,'.PHP_EOL.PHP_EOL.'        /*'.PHP_EOL.'         * Package Service Providers...'
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/config/app.php"));

transform([
    "'model' => App\Models\User::class" => "'model' => Illuminate\Foundation\Auth\User::class",
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/config/auth.php"));

$files->copy("{$workingPath}/vendor/laravel/dusk/stubs/phpunit.xml", "{$workingPath}/stubs/phpunit.xml");

$files->deleteDirectory("{$workingPath}/skeleton");
