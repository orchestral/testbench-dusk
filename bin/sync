#!/usr/bin/env php
<?php

$workingPath = getcwd();

require __DIR__.'/../vendor/autoload.php';

$input = new Symfony\Component\Console\Input\ArgvInput();
$files = new Illuminate\Filesystem\Filesystem();

$version = ($input->hasParameterOption('--dev') && $input->hasParameterOption('--stable') === false) ? '10.x-dev' : '^10.0';

$files->delete("{$workingPath}/laravel/.env");
$files->deleteDirectory("{$workingPath}/skeleton");

$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/bootstrap/app.php", "{$workingPath}/laravel/bootstrap/app.php");
$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/server.php", "{$workingPath}/laravel/server.php");
$files->copy("{$workingPath}/vendor/orchestra/testbench-core/laravel/.gitignore", "{$workingPath}/laravel/.gitignore");
$files->copy("{$workingPath}/vendor/laravel/dusk/stubs/phpunit.xml", "{$workingPath}/stubs/phpunit.xml");
$files->copy("{$workingPath}/vendor/laravel/dusk/stubs/phpunit9.xml", "{$workingPath}/stubs/phpunit9.xml");

Symfony\Component\Process\Process::fromShellCommandline(
    'composer create-project "laravel/laravel:'.$version.'" skeleton --no-scripts --no-plugins --quiet --no-install', $workingPath
)->mustRun();

Illuminate\Support\Collection::make([
    '.env.example',
    'config/*.php',
    'database/migrations/2014_10_12_000000_create_users_table.php',
    'database/migrations/2014_10_12_100000_create_password_reset_tokens_table.php',
    'database/migrations/2019_08_19_000000_create_failed_jobs_table.php',
    'resources/views/*',
    'public/index.php',
    'tests/CreatesApplication.php',
])->transform(fn ($file) => "{$workingPath}/skeleton/{$file}")
->map(fn ($file) => str_contains($file, '*') ? [...$files->glob($file)] : $file)
->flatten()
->each(function ($file) use ($files, $workingPath) {
    $files->copy($file, "{$workingPath}/laravel".Illuminate\Support\Str::after($file, "{$workingPath}/skeleton"));
});
$files->delete("{$workingPath}/laravel/config/sanctum.php");
$files->move("{$workingPath}/laravel/database/migrations/2014_10_12_000000_create_users_table.php", "{$workingPath}/laravel/migrations/2014_10_12_000000_testbench_create_users_table.php");
$files->move("{$workingPath}/laravel/database/migrations/2014_10_12_100000_create_password_reset_tokens_table.php", "{$workingPath}/laravel/migrations/2014_10_12_100000_testbench_create_password_reset_tokens_table.php");
$files->move("{$workingPath}/laravel/database/migrations/2019_08_19_000000_create_failed_jobs_table.php", "{$workingPath}/laravel/migrations/2019_08_19_000000_testbench_create_failed_jobs_table.php");

transform([
    PHP_EOL.'APP_KEY=' => PHP_EOL.'APP_KEY=AckfSECXIvnK5r28GVIWUAxmbBSjTsmF',
    PHP_EOL.'DB_CONNECTION=mysql' => PHP_EOL.'DB_CONNECTION=sqlite',
    PHP_EOL.'DB_HOST=' => PHP_EOL.'# DB_HOST=',
    PHP_EOL.'DB_PORT=' => PHP_EOL.'# DB_PORT=',
    PHP_EOL.'DB_DATABASE=' => PHP_EOL.'# DB_DATABASE=',
    PHP_EOL.'DB_USERNAME=' => PHP_EOL.'# DB_USERNAME=',
    PHP_EOL.'DB_PASSWORD=' => PHP_EOL.'# DB_PASSWORD=',
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/.env.example"));

transform([
    "env('APP_ENV', 'production')" => "env('APP_ENV', 'testing')",
    PHP_EOL.'        App\Providers' => PHP_EOL.'        // App\Providers',
    PHP_EOL.'         * Package Service Providers...' => PHP_EOL.'         * Dusk Service Provider'.PHP_EOL.'         */'.PHP_EOL.'        Laravel\Dusk\DuskServiceProvider::class,'.PHP_EOL.PHP_EOL.'        /*'.PHP_EOL.'         * Package Service Providers...'
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/config/app.php"));

transform([
    "'model' => App\Models\User::class" => "'model' => Illuminate\Foundation\Auth\User::class",
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/config/auth.php"));

transform([
    "env('BCRYPT_ROUNDS', 12)," => "env('BCRYPT_ROUNDS', 10),",
], fn ($changes) => $files->replaceInFile(array_keys($changes), array_values($changes), "{$workingPath}/laravel/config/hashing.php"));

$files->deleteDirectory("{$workingPath}/skeleton");
